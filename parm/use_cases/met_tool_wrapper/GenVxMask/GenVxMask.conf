[config]
## Configuration-related settings such as the process list, begin and end times, etc.

# List of applications to run - only GenVxMask for this case
PROCESS_LIST = GenVxMask

# time looping - options are INIT, VALID, RETRO, and REALTIME
# If set to INIT or RETRO:
#   INIT_TIME_FMT, INIT_BEG, INIT_END, and INIT_INCREMENT must also be set
# If set to VALID or REALTIME:
#   VALID_TIME_FMT, VALID_BEG, VALID_END, and VALID_INCREMENT must also be set
LOOP_BY = INIT

# Format of VALID_BEG and VALID_END using % items
# %Y = 4 digit year, %m = 2 digit month, %d = 2 digit day, etc.
# see www.strftime.org for more information
# %Y%m%d%H expands to YYYYMMDDHH
INIT_TIME_FMT = %Y%m%d%H

# Start time for METplus run - must match INIT_TIME_FMT
INIT_BEG = 2012040900

# End time for METplus run - must match INIT_TIME_FMT
INIT_END = 2012040900

# Increment between METplus runs (in seconds if no units are specified)
#  Must be >= 60 seconds
INIT_INCREMENT = 1M

# List of forecast leads to process for each run time (init or valid)
# If unset, defaults to 0 (don't loop through forecast leads
LEAD_SEQ = 12H

# Order of loops to process data - Options are times, processes
# Not relevant if only one item is in the PROCESS_LIST
# times = run all wrappers in the PROCESS_LIST for a single run time, then
#   increment the run time and run all wrappers again until all times have
#   been evaluated.
# processes = run the first wrapper in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST until all
#   wrappers have been run
LOOP_ORDER = times

# Verbosity of MET output - overrides LOG_VERBOSITY for GenVxMask only
LOG_GEN_VX_MASK_VERBOSITY = 1

# Time relative to valid time (in seconds if no units are specified) to allow files to be considered
#  valid. Set both BEGIN and END to 0 to require the exact time in the filename
#  Not used in this example.
GEN_VX_MASK_FILE_WINDOW_BEGIN = 0
GEN_VX_MASK_FILE_WINDOW_END = 0

# Value to pass with the -format argument to ascii2nc. See MET User's Guide for more information
GEN_VX_MASK_TYPE =

# Value to pass with the -mask_grid argument to ascii2nc. See MET User's Guide for more information
GEN_VX_MASK_INPUT_FIELD =

GEN_VX_MASK_INPUT_MASK_FIELD =

GEN_VX_MASK_OUTPUT_NAME =

GEN_VX_MASK_COMPLEMENT_FLAG = False

GEN_VX_MASK_UNION_FLAG = False

GEN_VX_MASK_INTERSECTION_FLAG = False

GEN_VX_MASK_SYMDIFF_FLAG = False

GEN_VX_MASK_THRESH =

GEN_VX_MASK_HEIGHT =

GEN_VX_MASK_WIDTH =

GEN_VX_MASK_SHAPE_NUMBER =

GEN_VX_MASK_VALUE =

# Value to pass with the -mask_poly argument to ascii2nc. See MET User's Guide for more information
GEN_VX_MASK_MASK_POLY =

# Value to pass with the -mask_sid argument to ascii2nc. See MET User's Guide for more information
GEN_VX_MASK_MASK_SID =

# End of [config] section and start of [dir] section
[dir]

# Input/Output directories can be left empty if the corresponding template contains the full path to the files
GEN_VX_MASK_INPUT_DIR =

GEN_VX_MASK_INPUT_MASK_DIR =

GEN_VX_MASK_OUTPUT_DIR =

# End of [dir] section and start of [filename_templates] section
[filename_templates]

# Template to look for input to GenVxMask relative to GEN_VX_MASK_INPUT_DIR
GEN_VX_MASK_INPUT_TEMPLATE = {INPUT_BASE}/met_test/new/gfs/gfs_{init?fmt=%Y%m%d%H}_F{lead?fmt=%3H}.grib

GEN_VX_MASK_INPUT_MASK_TEMPLATE = {INPUT_BASE}/met_test/data/poly/CONUS.poly

# Template to use to write output from GenVxMask
GEN_VX_MASK_OUTPUT_TEMPLATE = {OUTPUT_BASE}/met_tool_wrapper/GenVxMask/POLY_GFS_LATLON_CONUS_mask.nc
